@model ElevatorManagerViewModel
@{
    ViewBag.Title = "Elevator System Status";
    Layout = "_Layout";
    var elevatorCount = Model.Elevators.Count;
    var floorList = Enumerable.Range(1, Model.Floors).OrderByDescending(f => f).ToList();
}
<h2 class="mb-4">Elevator System Status</h2>
<table class="table table-bordered table-striped table-hover text-center align-middle">
    <thead class="table-dark">
        <tr>
            <th>Floor</th>
            <th>Pending Requests</th>
            @foreach (var elevator in Model.Elevators)
            {
                <th>Elevator @elevator.Id</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var floor in floorList)
        {
            <tr>
                <td><strong>@floor</strong></td>
                <td>
                    @{
                        // Find pending requests for this floor
                        var floorRequests = Model.PendingRequests
                            .Where(r => r.Floor == floor)
                            .Select(r => r.Direction)
                            .Distinct()
                            .ToList();

                        if (floorRequests.Contains("Up"))
                        {
                            <span class="badge bg-primary mx-1">↑ Up</span>
                        }
                        if (floorRequests.Contains("Down"))
                        {
                            <span class="badge bg-success mx-1">↓ Down</span>
                        }
                        if (!floorRequests.Any())
                        {
                            <span class="text-muted">None</span>
                        }
                    }
                </td>
                @foreach (var elevator in Model.Elevators)
                {
                    if (elevator.CurrentFloor == floor)
                    {
                        <td>
                            <span class="fw-bold text-warning">
                                🚗
                                @if (!string.IsNullOrEmpty(elevator.Direction))
                                {
                                    <span>
                                        (@elevator.Direction)
                                    </span>
                                }
                            </span>
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                }
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function updateDashboard() {
            $.ajax({
                url: '/api/elevator/status',
                method: 'GET',
                success: function (data) {
                    console.log('Dashboard updated', data);
                }
            });
        }

        $(document).ready(function () {
            updateDashboard(); // Initial load
            setInterval(updateDashboard, 5000); // Poll every 5 seconds
        });
    </script>
}